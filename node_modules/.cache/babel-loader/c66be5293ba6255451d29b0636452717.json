{"ast":null,"code":"var _jsxFileName = \"/home/nikita/Documents/it-kama/it-kama/src/components/Users/UsersApiContainer.jsx\";\nimport React from 'react';\nimport css from './Users.module.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport * as axios from 'axios';\nimport avatarDefault from '../../assets/img/user.png';\nimport { CircularProgress } from '@material-ui/core';\nimport Users from './Users';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3)\n  },\n  large: {\n    width: theme.spacing(10),\n    height: theme.spacing(10)\n  }\n}));\n\nclass UsersApiContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.classes = () => useStyles();\n\n    this.getUsers = () => {\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(res => {\n        this.setState({\n          isFetching: !this.isFetching\n        });\n        this.props.setUsers(res.data.items);\n        this.props.setTotalCount(res.data.totalCount);\n      });\n    };\n\n    this.onPageChanged = p => {\n      this.props.pickPage(p);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${p}&count=${this.props.pageSize}`).then(res => {\n        this.setState({\n          isFetching: !this.isFetching\n        });\n        this.props.setUsers(res.data.items);\n      });\n    };\n\n    this.state = {\n      isFetching: false\n    };\n  }\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  render() {\n    /*         let pagesCount = Math.ceil(this.props.totalCount / this.props.pageSize);\n            let pages = [];\n            for (let i = 1; i <= pagesCount; i++) {\n                pages.push(i)\n            } */\n    return /*#__PURE__*/React.createElement(Users, {\n      pageSize: this.props.pageSize,\n      totalCount: this.props.totalCount,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 16\n      }\n    });\n    /* (\n        <div className={css.container}>\n            <Users />\n            <div>\n                {\n                    \n                    pages.map( (p,index) => {\n                        return <button key={index}\n                                onClick={ () => {this.onPageChanged(p)}}\n                            className={this.props.currentPage === p && css.current}>{p}</button>\n                    })\n                }\n            </div>\n            {\n            this.state.isFetching\n            ?\n            <ul>\n                {\n                  this.props.users.map(u => {\n                        return (\n                            <li key={u.id} className={css.item}>\n                                <div className={css.wrapper}>\n                                    <Avatar className={this.classes.large + ' ' + css.avatar}\n                                        src={u.photos.small ? u.photos.small : avatarDefault}\n                                        alt='avatar' />\n                                    {\n                                        u.followed\n                                            ? <button onClick={() => { this.props.unfollow(u.id) }}>Unfollow</button>\n                                            : <button onClick={() => { this.props.follow(u.id) }}>Follow</button>\n                                      }\n                                </div>\n                                <div className={css.body}>\n                                    <div className={css.top}>\n                                        <div className={css.name}>{u.name}</div>\n                                    </div>\n                                     <div className={css.status}>{u.status}</div>\n                                </div>\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n            : <div className={css.progress}><CircularProgress color=\"secondary\" /></div>\n             }\n        </div>\n    ) */\n  }\n\n}\n\nexport default UsersApiContainer;","map":{"version":3,"sources":["/home/nikita/Documents/it-kama/it-kama/src/components/Users/UsersApiContainer.jsx"],"names":["React","css","makeStyles","Avatar","axios","avatarDefault","CircularProgress","Users","useStyles","theme","root","display","margin","spacing","small","width","height","large","UsersApiContainer","Component","constructor","props","classes","getUsers","get","currentPage","pageSize","then","res","setState","isFetching","setUsers","data","items","setTotalCount","totalCount","onPageChanged","p","pickPage","state","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAGA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEF,aAAS;AACLC,MAAAA,MAAM,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADH;AAFP,GAD+B;AAOrCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAEN,KAAK,CAACI,OAAN,CAAc,CAAd,CADJ;AAEHG,IAAAA,MAAM,EAAEP,KAAK,CAACI,OAAN,CAAc,CAAd;AAFL,GAP8B;AAWrCI,EAAAA,KAAK,EAAE;AACHF,IAAAA,KAAK,EAAEN,KAAK,CAACI,OAAN,CAAc,EAAd,CADJ;AAEHG,IAAAA,MAAM,EAAEP,KAAK,CAACI,OAAN,CAAc,EAAd;AAFL;AAX8B,CAAZ,CAAD,CAA5B;;AAiBA,MAAMK,iBAAN,SAAgClB,KAAK,CAACmB,SAAtC,CAAgD;AAE5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,OAPmB,GAOT,MAAMd,SAAS,EAPN;;AAAA,SASnBe,QATmB,GASR,MAAM;AACbnB,MAAAA,KAAK,CAACoB,GAAN,CAAW,2DAA0D,KAAKH,KAAL,CAAWI,WAAY,UAAS,KAAKJ,KAAL,CAAWK,QAAS,EAAzH,EACKC,IADL,CACUC,GAAG,IAAI;AACT,aAAKC,QAAL,CAAc;AAAEC,UAAAA,UAAU,EAAE,CAAC,KAAKA;AAApB,SAAd;AACA,aAAKT,KAAL,CAAWU,QAAX,CAAoBH,GAAG,CAACI,IAAJ,CAASC,KAA7B;AACA,aAAKZ,KAAL,CAAWa,aAAX,CAAyBN,GAAG,CAACI,IAAJ,CAASG,UAAlC;AACH,OALL;AAMH,KAhBkB;;AAAA,SAsBnBC,aAtBmB,GAsBFC,CAAD,IAAO;AACnB,WAAKhB,KAAL,CAAWiB,QAAX,CAAoBD,CAApB;AACAjC,MAAAA,KAAK,CAACoB,GAAN,CAAW,2DAA0Da,CAAE,UAAS,KAAKhB,KAAL,CAAWK,QAAS,EAApG,EACKC,IADL,CACUC,GAAG,IAAI;AACT,aAAKC,QAAL,CAAc;AAAEC,UAAAA,UAAU,EAAE,CAAC,KAAKA;AAApB,SAAd;AAEA,aAAKT,KAAL,CAAWU,QAAX,CAAoBH,GAAG,CAACI,IAAJ,CAASC,KAA7B;AACH,OALL;AAMH,KA9BkB;;AAEf,SAAKM,KAAL,GAAa;AACTT,MAAAA,UAAU,EAAE;AADH,KAAb;AAGH;;AAaDU,EAAAA,iBAAiB,GAAG;AAChB,SAAKjB,QAAL;AACH;;AAYDkB,EAAAA,MAAM,GAAG;AACL;;;;;AAKA,wBAAO,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAE,KAAKpB,KAAL,CAAWK,QAA5B;AACO,MAAA,UAAU,EAAE,KAAKL,KAAL,CAAWc,UAD9B;AAEO,MAAA,WAAW,EAAE,KAAKd,KAAL,CAAWI,WAF/B;AAGO,MAAA,aAAa,EAAE,KAAKW,aAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDH;;AAhG2C;;AAmGhD,eAAelB,iBAAf","sourcesContent":["import React from 'react';\nimport css from './Users.module.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport * as axios from 'axios';\nimport avatarDefault from '../../assets/img/user.png'\nimport { CircularProgress } from '@material-ui/core';\nimport Users from './Users';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    small: {\n        width: theme.spacing(3),\n        height: theme.spacing(3),\n    },\n    large: {\n        width: theme.spacing(10),\n        height: theme.spacing(10),\n    },\n}));\n\nclass UsersApiContainer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isFetching: false,\n        };\n    }\n\n    classes = () => useStyles();\n\n    getUsers = () => {\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\n            .then(res => {\n                this.setState({ isFetching: !this.isFetching })\n                this.props.setUsers(res.data.items)\n                this.props.setTotalCount(res.data.totalCount)\n            })\n    }\n\n    componentDidMount() {\n        this.getUsers()\n    }\n\n    onPageChanged = (p) => {\n        this.props.pickPage(p)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${p}&count=${this.props.pageSize}`)\n            .then(res => {\n                this.setState({ isFetching: !this.isFetching })\n\n                this.props.setUsers(res.data.items)\n            })\n    }\n\n    render() {\n        /*         let pagesCount = Math.ceil(this.props.totalCount / this.props.pageSize);\n                let pages = [];\n                for (let i = 1; i <= pagesCount; i++) {\n                    pages.push(i)\n                } */\n        return <Users pageSize={this.props.pageSize}\n                      totalCount={this.props.totalCount}\n                      currentPage={this.props.currentPage}\n                      onPageChanged={this.onPageChanged}\n                />\n        /* (\n            <div className={css.container}>\n                <Users />\n                <div>\n                    {\n                        \n                        pages.map( (p,index) => {\n                            return <button key={index}\n                                    onClick={ () => {this.onPageChanged(p)}}\n                                className={this.props.currentPage === p && css.current}>{p}</button>\n                        })\n                    }\n                </div>\n                {\n                this.state.isFetching\n                ?\n                <ul>\n                    {\n\n                     this.props.users.map(u => {\n                            return (\n                                <li key={u.id} className={css.item}>\n                                    <div className={css.wrapper}>\n                                        <Avatar className={this.classes.large + ' ' + css.avatar}\n                                            src={u.photos.small ? u.photos.small : avatarDefault}\n                                            alt='avatar' />\n                                        {\n                                            u.followed\n                                                ? <button onClick={() => { this.props.unfollow(u.id) }}>Unfollow</button>\n                                                : <button onClick={() => { this.props.follow(u.id) }}>Follow</button>\n\n\n                                        }\n                                    </div>\n                                    <div className={css.body}>\n                                        <div className={css.top}>\n                                            <div className={css.name}>{u.name}</div>\n                                        </div>\n\n                                        <div className={css.status}>{u.status}</div>\n                                    </div>\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n                : <div className={css.progress}><CircularProgress color=\"secondary\" /></div>\n\n                }\n            </div>\n        ) */\n    }\n}\n\nexport default UsersApiContainer;"]},"metadata":{},"sourceType":"module"}