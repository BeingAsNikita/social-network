{"ast":null,"code":"import { sendMessageActionCreator, updateNewMessageActionCreator } from '../../redux/dialogsReduser';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../Hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nlet mapStateToProps = state => {\n  return {\n    state: state.dialogs\n  };\n};\n/*   let mapDispatchToProps = (dispatch) => {\n    return {\n      updateNewMessageText: (text) => {\n          dispatch(updateNewMessageActionCreator(text))\n      },\n      sendMessage: () => {\n          dispatch(sendMessageActionCreator())\n      }\n    }\n  } */\n\n\ncompose(withAuthRedirect, connect(mapStateToProps, {\n  updateNewMessageActionCreator,\n  sendMessageActionCreator\n}))(Dialogs);\n/* let AuthRedirectComponent = withAuthRedirect(Dialogs); */\n\nexport default compose(withAuthRedirect, connect(mapStateToProps, {\n  updateNewMessageActionCreator,\n  sendMessageActionCreator\n}))(Dialogs);","map":{"version":3,"sources":["/home/nikita/Documents/it-kama/it-kama/src/components/Dialogs/DialogsContainer.jsx"],"names":["sendMessageActionCreator","updateNewMessageActionCreator","Dialogs","connect","withAuthRedirect","compose","mapStateToProps","state","dialogs"],"mappings":"AACA,SACIA,wBADJ,EAEIC,6BAFJ,QAGO,4BAHP;AAIA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAIA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACLA,IAAAA,KAAK,EAAEA,KAAK,CAACC;AADR,GAAP;AAGD,CAJH;AAMA;;;;;;;;;;;;AAWAH,OAAO,CACLD,gBADK,EAELD,OAAO,CAACG,eAAD,EAAiB;AAACL,EAAAA,6BAAD;AAA+BD,EAAAA;AAA/B,CAAjB,CAFF,CAAP,CAGEE,OAHF;AAKA;;AAEA,eAAeG,OAAO,CACpBD,gBADoB,EAEpBD,OAAO,CAACG,eAAD,EAAiB;AAACL,EAAAA,6BAAD;AAA+BD,EAAAA;AAA/B,CAAjB,CAFa,CAAP,CAGbE,OAHa,CAAf","sourcesContent":["\nimport {\n    sendMessageActionCreator, \n    updateNewMessageActionCreator\n} from '../../redux/dialogsReduser';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../Hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n      state: state.dialogs,\n    }\n  }\n  \n/*   let mapDispatchToProps = (dispatch) => {\n    return {\n      updateNewMessageText: (text) => {\n          dispatch(updateNewMessageActionCreator(text))\n      },\n      sendMessage: () => {\n          dispatch(sendMessageActionCreator())\n      }\n    }\n  } */\n\ncompose(\n  withAuthRedirect,\n  connect(mapStateToProps,{updateNewMessageActionCreator,sendMessageActionCreator})\n)(Dialogs)\n  \n/* let AuthRedirectComponent = withAuthRedirect(Dialogs); */\n\nexport default compose(\n  withAuthRedirect,\n  connect(mapStateToProps,{updateNewMessageActionCreator,sendMessageActionCreator})\n)(Dialogs)"]},"metadata":{},"sourceType":"module"}