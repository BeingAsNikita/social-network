{"ast":null,"code":"var _jsxFileName = \"/home/nikita/Documents/it-kama/it-kama/src/components/Users/UsersContainer.jsx\";\nimport React from 'react';\nimport * as axios from 'axios';\nimport Users from './Users';\nimport { followAC, unfollowAC, setUsersAC, pickPageAC, setTotalCountAC, fetchAC } from \"../../redux/usersReduser\";\nimport { connect } from \"react-redux\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = p => {\n      this.props.pickPage(p);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${p}&count=${this.props.pageSize}`).then(res => {\n        this.props.setUsers(res.data.items);\n        this.props.fetchHandler();\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(res => {\n      this.props.setUsers(res.data.items);\n      this.props.setTotalCount(res.data.totalCount);\n      this.props.fetchHandler();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Users, {\n      pageSize: this.props.pageSize,\n      totalCount: this.props.totalCount,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      isFetching: this.props.isFetching,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.users.users,\n    pageSize: state.users.pageSize,\n    totalCount: state.users.totalCount,\n    currentPage: state.users.currentPage,\n    isFetching: state.users.isFetching\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: id => {\n      dispatch(followAC(id));\n    },\n    unfollow: id => {\n      dispatch(unfollowAC(id));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    pickPage: page => {\n      dispatch(pickPageAC(page));\n    },\n    setTotalCount: totalCount => {\n      dispatch(setTotalCountAC(totalCount));\n    },\n    fetchHandler: () => {\n      dispatch(fetchAC());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","map":{"version":3,"sources":["/home/nikita/Documents/it-kama/it-kama/src/components/Users/UsersContainer.jsx"],"names":["React","axios","Users","followAC","unfollowAC","setUsersAC","pickPageAC","setTotalCountAC","fetchAC","connect","UsersContainer","Component","onPageChanged","p","props","pickPage","get","pageSize","then","res","setUsers","data","items","fetchHandler","componentDidMount","currentPage","setTotalCount","totalCount","render","users","isFetching","mapStateToProps","state","mapDispatchToProps","dispatch","follow","id","unfollow","page"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as axios from 'axios';\nimport Users from './Users';\nimport { followAC, unfollowAC, setUsersAC, pickPageAC, setTotalCountAC, fetchAC } from \"../../redux/usersReduser\";\nimport { connect } from \"react-redux\";\n\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\n            .then(res => {\n                this.props.setUsers(res.data.items)\n                this.props.setTotalCount(res.data.totalCount)\n                this.props.fetchHandler() \n            })\n    }\n\n    onPageChanged = (p) => {\n        this.props.pickPage(p)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${p}&count=${this.props.pageSize}`)\n            .then(res => {\n\n                this.props.setUsers(res.data.items)\n                this.props.fetchHandler() \n            }\n        )\n    }\n\n    render() {\n\n        return <Users pageSize={this.props.pageSize}\n            totalCount={this.props.totalCount}\n            currentPage={this.props.currentPage}\n            onPageChanged={this.onPageChanged}\n\n            users={this.props.users}\n            isFetching={this.props.isFetching}\n        />\n    }\n}\n\nlet mapStateToProps = (state) => {\n\n\n    return {\n        users: state.users.users,\n        pageSize: state.users.pageSize,\n        totalCount: state.users.totalCount,\n        currentPage: state.users.currentPage,\n        isFetching: state.users.isFetching,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        follow: (id) => {\n            dispatch(followAC(id))\n        },\n        unfollow: (id) => {\n            dispatch(unfollowAC(id))\n        },\n        setUsers: (users) => {\n            dispatch(setUsersAC(users))\n        },\n        pickPage: (page) => {\n            dispatch(pickPageAC(page))\n        },\n        setTotalCount: (totalCount) => {\n            dispatch(setTotalCountAC(totalCount))\n        },\n        fetchHandler: () => {\n            dispatch(fetchAC())\n        }\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);\n"]},"metadata":{},"sourceType":"module"}