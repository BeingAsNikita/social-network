{"ast":null,"code":"var _jsxFileName = \"/home/nikita/Documents/it-kama/it-kama/src/components/Header/HeaderContainer.jsx\";\nimport React from 'react';\nimport Header from './Header';\nimport { connect } from 'react-redux';\nimport { auth } from \"../../redux/authReduser\";\nimport { withRouter } from 'react-router-dom';\nimport { setUser } from '../../redux/profileReduser';\n\nclass HeaderContainer extends React.Component {\n  componentDidMount() {\n    /*         authMe().then(res => {\n                debugger\n                    if (res.data.resultCode === 0) {\n                        let { login, id, email } = res.data.data;\n                        this.props.auth(id, email, login);\n                         this.props.setUser(id) \n                    }\n                }) */\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Header, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n    email: state.auth.email,\n    id: state.auth.id\n  };\n};\n\nlet withUrlDataContainerComponent = withRouter(HeaderContainer);\nexport default connect(mapStateToProps, {\n  authMe\n})(withUrlDataContainerComponent);","map":{"version":3,"sources":["/home/nikita/Documents/it-kama/it-kama/src/components/Header/HeaderContainer.jsx"],"names":["React","Header","connect","auth","withRouter","setUser","HeaderContainer","Component","componentDidMount","render","props","mapStateToProps","state","isAuth","login","email","id","withUrlDataContainerComponent","authMe"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,4BAAxB;;AAEA,MAAMC,eAAN,SAA8BN,KAAK,CAACO,SAApC,CAA8C;AAE1CC,EAAAA,iBAAiB,GAAG;AACxB;;;;;;;;AAQK;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,MAAD,oBAAY,KAAKC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAGH;;AAjByC;;AAqB9C,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHC,IAAAA,MAAM,EAAED,KAAK,CAACT,IAAN,CAAWU,MADhB;AAEHC,IAAAA,KAAK,EAAEF,KAAK,CAACT,IAAN,CAAWW,KAFf;AAGHC,IAAAA,KAAK,EAAEH,KAAK,CAACT,IAAN,CAAWY,KAHf;AAIHC,IAAAA,EAAE,EAAEJ,KAAK,CAACT,IAAN,CAAWa;AAJZ,GAAP;AAOH,CARD;;AAWA,IAAIC,6BAA6B,GAAGb,UAAU,CAACE,eAAD,CAA9C;AAEA,eAAeJ,OAAO,CAACS,eAAD,EAAkB;AAAEO,EAAAA;AAAF,CAAlB,CAAP,CAAqCD,6BAArC,CAAf","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport { connect } from 'react-redux';\nimport { auth } from \"../../redux/authReduser\";\nimport { withRouter } from 'react-router-dom';\nimport { setUser } from '../../redux/profileReduser';\n\nclass HeaderContainer extends React.Component {\n\n    componentDidMount() {\n/*         authMe().then(res => {\n            debugger\n                if (res.data.resultCode === 0) {\n                    let { login, id, email } = res.data.data;\n                    this.props.auth(id, email, login);\n                     this.props.setUser(id) \n                }\n            }) */\n    }\n\n    render() {\n        return (\n            <Header {...this.props} />\n        )\n    }\n\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.isAuth,\n        login: state.auth.login,\n        email: state.auth.email,\n        id: state.auth.id,\n\n    }\n}\n\n\nlet withUrlDataContainerComponent = withRouter(HeaderContainer)\n\nexport default connect(mapStateToProps, { authMe })(withUrlDataContainerComponent);"]},"metadata":{},"sourceType":"module"}