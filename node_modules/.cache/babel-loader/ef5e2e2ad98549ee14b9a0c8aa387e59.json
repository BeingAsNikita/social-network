{"ast":null,"code":"import { sendMessageActionCreator, updateNewMessageActionCreator } from '../../redux/dialogsReduser';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../Hoc/withAuthRedirect';\n\nlet mapStateToProps = state => {\n  return {\n    state: state.dialogs,\n    isAuth: state.auth.isAuth\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    /*      updateNewMessageText: (text) => {\n             dispatch(updateNewMessageActionCreator(text))\n         },\n         sendMessage: () => {\n             dispatch(sendMessageActionCreator())\n         } */\n  };\n};\n\nlet AuthRedirectComponent = withAuthRedirect(Dialogs);\nexport default connect(mapStateToProps, {\n  updateNewMessageActionCreator,\n  sendMessageActionCreator\n})(AuthRedirectComponent);","map":{"version":3,"sources":["/home/nikita/Documents/it-kama/it-kama/src/components/Dialogs/DialogsContainer.jsx"],"names":["sendMessageActionCreator","updateNewMessageActionCreator","Dialogs","connect","withAuthRedirect","mapStateToProps","state","dialogs","isAuth","auth","mapDispatchToProps","dispatch","AuthRedirectComponent"],"mappings":"AACA,SACIA,wBADJ,EAEIC,6BAFJ,QAGO,4BAHP;AAIA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,4BAAjC;;AAIA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACLA,IAAAA,KAAK,EAAEA,KAAK,CAACC,OADR;AAELC,IAAAA,MAAM,EAAEF,KAAK,CAACG,IAAN,CAAWD;AAFd,GAAP;AAID,CALH;;AAOE,IAAIE,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACV;;;;;;AADU,GAAP;AAQD,CATD;;AAWF,IAAIC,qBAAqB,GAAGR,gBAAgB,CAACF,OAAD,CAA5C;AAEA,eAAeC,OAAO,CAACE,eAAD,EAAiB;AAACJ,EAAAA,6BAAD;AAA+BD,EAAAA;AAA/B,CAAjB,CAAP,CAAkFY,qBAAlF,CAAf","sourcesContent":["\nimport {\n    sendMessageActionCreator, \n    updateNewMessageActionCreator\n} from '../../redux/dialogsReduser';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../Hoc/withAuthRedirect';\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n      state: state.dialogs,\n      isAuth: state.auth.isAuth\n    }\n  }\n  \n  let mapDispatchToProps = (dispatch) => {\n    return {\n /*      updateNewMessageText: (text) => {\n          dispatch(updateNewMessageActionCreator(text))\n      },\n      sendMessage: () => {\n          dispatch(sendMessageActionCreator())\n      } */\n    }\n  }\n  \nlet AuthRedirectComponent = withAuthRedirect(Dialogs);\n\nexport default connect(mapStateToProps,{updateNewMessageActionCreator,sendMessageActionCreator})(AuthRedirectComponent);"]},"metadata":{},"sourceType":"module"}