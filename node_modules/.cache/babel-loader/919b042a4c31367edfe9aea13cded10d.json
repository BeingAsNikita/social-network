{"ast":null,"code":"var _jsxFileName = \"/home/nikita/Documents/it-kama/it-kama/src/components/Dialogs/Dialogs.jsx\";\nimport React from 'react';\nimport css from './Dialogs.module.css';\nimport Dialog from './Dialog/Dialog';\nimport Message from './Message/Message';\nimport NewMessage from './NewMessage/NewMessage';\nimport { sendMessageActionCreator, updateNewMessageActionCreator } from '../../redux/dialogsReduser';\n\nconst Dialogs = props => {\n  let state = props.store.getState();\n  let dialogs = state.dialogs.users.map(item => {\n    return /*#__PURE__*/React.createElement(Dialog, {\n      key: item.id,\n      id: item.id,\n      name: item.name,\n      message: item.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    });\n  });\n  let messages = state.dialogs.message.map(item => {\n    return /*#__PURE__*/React.createElement(Message, {\n      key: item.id,\n      text: item.text,\n      date: item.date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    });\n  });\n\n  let onChangeMessage = e => {\n    let text = e.target.value;\n    props.store.dispatch(updateNewMessageActionCreator(text));\n  };\n\n  let onSendMessageClick = () => {\n    props.store.dispatch(sendMessageActionCreator());\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: css.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: css.chat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: css.sidebar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: css.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, dialogs)), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, messages), /*#__PURE__*/React.createElement(NewMessage, {\n    store: props.store,\n    newMessageText: state.dialogs.newMessageText,\n    sendMessage: onSendMessageClick,\n    updateNewMessageText: onChangeMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Dialogs;","map":{"version":3,"sources":["/home/nikita/Documents/it-kama/it-kama/src/components/Dialogs/Dialogs.jsx"],"names":["React","css","Dialog","Message","NewMessage","sendMessageActionCreator","updateNewMessageActionCreator","Dialogs","props","state","store","getState","dialogs","users","map","item","id","name","message","messages","text","date","onChangeMessage","e","target","value","dispatch","onSendMessageClick","wrapper","chat","sidebar","list","newMessageText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAAQC,wBAAR,EAAkCC,6BAAlC,QAAsE,4BAAtE;;AAIA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACvB,MAAIC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAYC,QAAZ,EAAZ;AAEA,MAAIC,OAAO,GAAGH,KAAK,CAACG,OAAN,CAAcC,KAAd,CAAoBC,GAApB,CAAwBC,IAAI,IAAI;AAC1C,wBACI,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAlB;AACI,MAAA,EAAE,EAAED,IAAI,CAACC,EADb;AAEI,MAAA,IAAI,EAAED,IAAI,CAACE,IAFf;AAGI,MAAA,OAAO,EAAEF,IAAI,CAACG,OAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOH,GARa,CAAd;AAUA,MAAIC,QAAQ,GAAGV,KAAK,CAACG,OAAN,CAAcM,OAAd,CAAsBJ,GAAtB,CAA0BC,IAAI,IAAI;AAC7C,wBACI,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAnB;AACI,MAAA,IAAI,EAAED,IAAI,CAACK,IADf;AAEI,MAAA,IAAI,EAAEL,IAAI,CAACM,IAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAMH,GAPc,CAAf;;AASA,MAAIC,eAAe,GAAIC,CAAD,IAAO;AACzB,QAAIH,IAAI,GAAGG,CAAC,CAACC,MAAF,CAASC,KAApB;AACAjB,IAAAA,KAAK,CAACE,KAAN,CAAYgB,QAAZ,CAAqBpB,6BAA6B,CAACc,IAAD,CAAlD;AACH,GAHD;;AAKA,MAAIO,kBAAkB,GAAG,MAAM;AAC3BnB,IAAAA,KAAK,CAACE,KAAN,CAAYgB,QAAZ,CAAqBrB,wBAAwB,EAA7C;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAEJ,GAAG,CAAC2B,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAE3B,GAAG,CAAC4B,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAE5B,GAAG,CAAC6B,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAE7B,GAAG,CAAC8B,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKnB,OAFL,CADJ,CADJ,eAQI;AAAK,IAAA,SAAS,EAAEX,GAAG,CAACkB,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEMA,QAFN,CARJ,eAaI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEX,KAAK,CAACE,KAAzB;AACI,IAAA,cAAc,EAAED,KAAK,CAACG,OAAN,CAAcoB,cADlC;AAEI,IAAA,WAAW,EAAEL,kBAFjB;AAGI,IAAA,oBAAoB,EAAEL,eAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CADJ,CADJ;AAuBH,CAtDD;;AAwDA,eAAef,OAAf","sourcesContent":["import React from 'react';\nimport css from './Dialogs.module.css';\nimport Dialog from './Dialog/Dialog';\nimport Message from './Message/Message';\nimport NewMessage from './NewMessage/NewMessage';\nimport {sendMessageActionCreator, updateNewMessageActionCreator} from '../../redux/dialogsReduser'\n\n\n\nconst Dialogs = (props) => {\n    let state = props.store.getState();\n\n    let dialogs = state.dialogs.users.map(item => {\n        return (\n            <Dialog key={item.id}\n                id={item.id}\n                name={item.name}\n                message={item.message}\n            />\n        )\n    })\n\n    let messages = state.dialogs.message.map(item => {\n        return (\n            <Message key={item.id}\n                text={item.text}\n                date={item.date}\n            />\n        )\n    })\n\n    let onChangeMessage = (e) => {\n        let text = e.target.value;\n        props.store.dispatch(updateNewMessageActionCreator(text))\n    }\n    \n    let onSendMessageClick = () => {\n        props.store.dispatch(sendMessageActionCreator())\n    }\n\n    return (\n        <div className={css.wrapper}>\n            <div className={css.chat}>\n                <div className={css.sidebar}>\n                    <ul className={css.list}>\n\n                        {dialogs}\n\n                    </ul>\n                </div>\n                <div className={css.messages}>\n\n                    { messages }\n                    \n                </div>\n                <NewMessage store={props.store}\n                    newMessageText={state.dialogs.newMessageText}\n                    sendMessage={onSendMessageClick}\n                    updateNewMessageText={onChangeMessage}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}