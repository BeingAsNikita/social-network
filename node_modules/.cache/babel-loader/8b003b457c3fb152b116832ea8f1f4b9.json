{"ast":null,"code":"import { sendMessageActionCreator, updateNewMessageActionCreator } from '../../redux/dialogsReduser';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../Hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nlet mapStateToProps = state => {\n  return {\n    state: state.dialogs\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    sendMessage: message => {\n      dispatch(sendMessageActionCreator(message));\n    }\n  };\n};\n/* compose(\n  withAuthRedirect,\n  connect(mapStateToProps,{updateNewMessageActionCreator,sendMessageActionCreator})\n)(Dialogs) */\n\n/* let AuthRedirectComponent = withAuthRedirect(Dialogs); */\n\n\nexport default compose(withAuthRedirect, connect(mapStateToProps, mapDispatchToProps))(Dialogs);","map":{"version":3,"sources":["/home/nikita/Documents/it-kama/it-kama/src/components/Dialogs/DialogsContainer.jsx"],"names":["sendMessageActionCreator","updateNewMessageActionCreator","Dialogs","connect","withAuthRedirect","compose","mapStateToProps","state","dialogs","mapDispatchToProps","dispatch","sendMessage","message"],"mappings":"AACA,SACIA,wBADJ,EAEIC,6BAFJ,QAGO,4BAHP;AAIA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAIA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACLA,IAAAA,KAAK,EAAEA,KAAK,CAACC;AADR,GAAP;AAGD,CAJH;;AAME,IAAIC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AAELC,IAAAA,WAAW,EAAGC,OAAD,IAAa;AACtBF,MAAAA,QAAQ,CAACV,wBAAwB,CAACY,OAAD,CAAzB,CAAR;AACH;AAJI,GAAP;AAMD,CAPD;AASF;;;;;AAKA;;;AAEA,eAAeP,OAAO,CACpBD,gBADoB,EAEpBD,OAAO,CAACG,eAAD,EAAiBG,kBAAjB,CAFa,CAAP,CAGbP,OAHa,CAAf","sourcesContent":["\nimport {\n    sendMessageActionCreator, \n    updateNewMessageActionCreator\n} from '../../redux/dialogsReduser';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../Hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n      state: state.dialogs,\n    }\n  }\n  \n  let mapDispatchToProps = (dispatch) => {\n    return {\n\n      sendMessage: (message) => {\n          dispatch(sendMessageActionCreator(message))\n      }\n    }\n  }\n\n/* compose(\n  withAuthRedirect,\n  connect(mapStateToProps,{updateNewMessageActionCreator,sendMessageActionCreator})\n)(Dialogs) */\n  \n/* let AuthRedirectComponent = withAuthRedirect(Dialogs); */\n\nexport default compose(\n  withAuthRedirect,\n  connect(mapStateToProps,mapDispatchToProps)\n)(Dialogs)"]},"metadata":{},"sourceType":"module"}