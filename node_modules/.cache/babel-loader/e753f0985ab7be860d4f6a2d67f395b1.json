{"ast":null,"code":"var _jsxFileName = \"/home/nikita/Documents/it-kama/it-kama/src/components/Users/UsersContainer.jsx\";\nimport React from 'react';\nimport * as axios from 'axios';\nimport Users from './Users';\nimport { follow, unfollow, setUsers, pickPage, setTotalCount, fetch } from \"../../redux/usersReduser\";\nimport { connect } from \"react-redux\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = p => {\n      this.props.pickPage(p);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${p}&count=${this.props.pageSize}`).then(res => {\n        this.props.setUsers(res.data.items);\n        this.props.fetchHandler();\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(res => {\n      this.props.setUsers(res.data.items);\n      this.props.setTotalCount(res.data.totalCount);\n      this.props.fetchHandler();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Users, {\n      pageSize: this.props.pageSize,\n      totalCount: this.props.totalCount,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      users: this.props.users,\n      isFetching: this.props.isFetching,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.users.users,\n    pageSize: state.users.pageSize,\n    totalCount: state.users.totalCount,\n    currentPage: state.users.currentPage,\n    isFetching: state.users.isFetching\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: id => {\n      dispatch(followAC(id));\n    },\n    unfollow: id => {\n      dispatch(unfollowAC(id));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    pickPage: page => {\n      dispatch(pickPageAC(page));\n    },\n    setTotalCount: totalCount => {\n      dispatch(setTotalCountAC(totalCount));\n    },\n    fetchHandler: () => {\n      dispatch(fetchAC());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, follow, unfollow, setUsers, pickPage, setTotalCount, fetch)(UsersContainer);","map":{"version":3,"sources":["/home/nikita/Documents/it-kama/it-kama/src/components/Users/UsersContainer.jsx"],"names":["React","axios","Users","follow","unfollow","setUsers","pickPage","setTotalCount","fetch","connect","UsersContainer","Component","onPageChanged","p","props","get","pageSize","then","res","data","items","fetchHandler","componentDidMount","currentPage","totalCount","render","users","isFetching","mapStateToProps","state","mapDispatchToProps","dispatch","id","followAC","unfollowAC","setUsersAC","page","pickPageAC","setTotalCountAC","fetchAC"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as axios from 'axios';\nimport Users from './Users';\nimport { follow, unfollow, setUsers, pickPage, setTotalCount, fetch } from \"../../redux/usersReduser\";\nimport { connect } from \"react-redux\";\n\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\n            .then(res => {\n                this.props.setUsers(res.data.items)\n                this.props.setTotalCount(res.data.totalCount)\n                this.props.fetchHandler() \n            })\n    }\n\n    onPageChanged = (p) => {\n        this.props.pickPage(p)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${p}&count=${this.props.pageSize}`)\n            .then(res => {\n\n                this.props.setUsers(res.data.items)\n                this.props.fetchHandler() \n            }\n        )\n    }\n\n    render() {\n\n        return <Users pageSize={this.props.pageSize}\n            totalCount={this.props.totalCount}\n            currentPage={this.props.currentPage}\n            onPageChanged={this.onPageChanged}\n            follow={this.props.follow}\n            unfollow={this.props.unfollow}\n            users={this.props.users}\n            isFetching={this.props.isFetching}\n        />\n    }\n}\n\nlet mapStateToProps = (state) => {\n\n\n    return {\n        users: state.users.users,\n        pageSize: state.users.pageSize,\n        totalCount: state.users.totalCount,\n        currentPage: state.users.currentPage,\n        isFetching: state.users.isFetching,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        follow: (id) => {\n            dispatch(followAC(id))\n        },\n        unfollow: (id) => {\n            dispatch(unfollowAC(id))\n        },\n        setUsers: (users) => {\n            dispatch(setUsersAC(users))\n        },\n        pickPage: (page) => {\n            dispatch(pickPageAC(page))\n        },\n        setTotalCount: (totalCount) => {\n            dispatch(setTotalCountAC(totalCount))\n        },\n        fetchHandler: () => {\n            dispatch(fetchAC())\n        }\n\n    }\n}\n\nexport default connect(mapStateToProps, follow, unfollow, setUsers, pickPage, setTotalCount, fetch)(UsersContainer);\n"]},"metadata":{},"sourceType":"module"}