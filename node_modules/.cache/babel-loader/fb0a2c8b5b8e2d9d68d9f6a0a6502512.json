{"ast":null,"code":"import Users from \"./Users\";\nimport { followAC, unfollowAC, setUsersAC } from \"../../redux/usersReduser\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToProps = state => {\n  debugger;\n  return {\n    users: state.users.users,\n    pageSize: state.users.pageSize,\n    totalCount: state.users.totalCount\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: id => {\n      dispatch(followAC(id));\n    },\n    unfollow: id => {\n      dispatch(unfollowAC(id));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","map":{"version":3,"sources":["/home/nikita/Documents/it-kama/it-kama/src/components/Users/UsersContainer.jsx"],"names":["Users","followAC","unfollowAC","setUsersAC","connect","mapStateToProps","state","users","pageSize","totalCount","mapDispatchToProps","dispatch","follow","id","unfollow","setUsers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,UAA/B,QAAiD,0BAAjD;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B;AAEA,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,CAAYA,KADhB;AAEHC,IAAAA,QAAQ,EAAEF,KAAK,CAACC,KAAN,CAAYC,QAFnB;AAGHC,IAAAA,UAAU,EAAEH,KAAK,CAACC,KAAN,CAAYE;AAHrB,GAAP;AAKH,CARD;;AAUA,IAAIC,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAO;AACHC,IAAAA,MAAM,EAAGC,EAAD,IAAQ;AACZF,MAAAA,QAAQ,CAACV,QAAQ,CAACY,EAAD,CAAT,CAAR;AACH,KAHE;AAIHC,IAAAA,QAAQ,EAAGD,EAAD,IAAQ;AACdF,MAAAA,QAAQ,CAACT,UAAU,CAACW,EAAD,CAAX,CAAR;AACH,KANE;AAOHE,IAAAA,QAAQ,EAAGR,KAAD,IAAW;AACjBI,MAAAA,QAAQ,CAACR,UAAU,CAACI,KAAD,CAAX,CAAR;AACH;AATE,GAAP;AAWH,CAZD;;AAcA,eAAeH,OAAO,CAACC,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CV,KAA7C,CAAf","sourcesContent":["import Users from \"./Users\";\nimport { followAC, unfollowAC, setUsersAC } from \"../../redux/usersReduser\";\nimport { connect } from \"react-redux\";\n\n\nlet mapStateToProps = (state) => {\n    debugger\n\n    return {\n        users: state.users.users,\n        pageSize: state.users.pageSize,\n        totalCount: state.users.totalCount,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        follow: (id) => {\n            dispatch(followAC(id))\n        },\n        unfollow: (id) => {\n            dispatch(unfollowAC(id))\n        },\n        setUsers: (users) => {\n            dispatch(setUsersAC(users))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);"]},"metadata":{},"sourceType":"module"}