{"ast":null,"code":"var _jsxFileName = \"/home/nikita/Documents/it-kama/it-kama/src/components/Profile/MyPosts/MyPosts.jsx\";\nimport React from 'react';\nimport css from './MyPosts.module.css';\nimport NewPost from './NewPost/NewPost';\nimport { addPostActionCreator, updateNewPostActionCreator } from '../../../redux/profileReduser';\nimport PostsList from './PostsList/PostsList';\nimport { connect } from 'react-redux';\nimport PostsListContainer from './PostsList/PostsListContainer';\nimport NewPostContainer from './NewPost/NewPostContainer';\n\nconst MyPosts = props => {\n  /*   let state = props.store.getState();\n    let posts = state.profile.posts.sort((a,b) => b.id - a.id) */\n  let addPost = () => {\n    props.store.dispatch(addPostActionCreator());\n  };\n\n  let onPostChange = text => {\n    props.store.dispatch(updateNewPostActionCreator(text));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: css.posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, \"My Posts\"), /*#__PURE__*/React.createElement(NewPostContainer, {\n    updateNewPostText: onPostChange,\n    newPostText: state.profile.newPostText,\n    addPost: addPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PostsListContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }));\n};\n/* let mapStateToProps = (state) => {\n  return {\n    posts: state.profile\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    updateNewPostText: (text) => {\n      dispatch(updateNewPostActionCreator(text))\n    },\n    addPost: () => {\n      dispatch(addPostActionCreator())\n    }\n\n  }\n}\n\nconst SuperMyPosts = connect(mapStateToProps,mapDispatchToProps)(MyPosts); */\n\n\nexport default MyPosts;","map":{"version":3,"sources":["/home/nikita/Documents/it-kama/it-kama/src/components/Profile/MyPosts/MyPosts.jsx"],"names":["React","css","NewPost","addPostActionCreator","updateNewPostActionCreator","PostsList","connect","PostsListContainer","NewPostContainer","MyPosts","props","addPost","store","dispatch","onPostChange","text","posts","state","profile","newPostText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,oBAAT,EAA+BC,0BAA/B,QAAiE,+BAAjE;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;;AAGA,MAAMC,OAAO,GAAGC,KAAD,IAAW;AAE1B;;AAGE,MAAIC,OAAO,GAAG,MAAM;AAClBD,IAAAA,KAAK,CAACE,KAAN,CAAYC,QAAZ,CAAqBV,oBAAoB,EAAzC;AACD,GAFD;;AAIA,MAAIW,YAAY,GAAIC,IAAD,IAAU;AAC3BL,IAAAA,KAAK,CAACE,KAAN,CAAYC,QAAZ,CAAqBT,0BAA0B,CAACW,IAAD,CAA/C;AACD,GAFD;;AAIE,sBACI;AAAK,IAAA,SAAS,EAAEd,GAAG,CAACe,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,gBAAD;AAAkB,IAAA,iBAAiB,EAAEF,YAArC;AACS,IAAA,WAAW,EAAEG,KAAK,CAACC,OAAN,CAAcC,WADpC;AAES,IAAA,OAAO,EAAER,OAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAKE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADJ;AASH,CAtBD;AAwBA;;;;;;;;;;;;;;;;;;;;;AAoBA,eAAeF,OAAf","sourcesContent":["import React from 'react';\nimport css from './MyPosts.module.css'\nimport NewPost from './NewPost/NewPost';\nimport { addPostActionCreator, updateNewPostActionCreator } from '../../../redux/profileReduser'\nimport PostsList from './PostsList/PostsList';\nimport { connect } from 'react-redux';\nimport PostsListContainer from './PostsList/PostsListContainer';\nimport NewPostContainer from './NewPost/NewPostContainer';\n\n\nconst MyPosts= (props) => {\n\n/*   let state = props.store.getState();\n  let posts = state.profile.posts.sort((a,b) => b.id - a.id) */\n  \n  let addPost = () => {\n    props.store.dispatch(addPostActionCreator())\n  }\n\n  let onPostChange = (text) => {\n    props.store.dispatch(updateNewPostActionCreator(text))\n  }\n\n    return (\n        <div className={css.posts}>\n          <h2>My Posts</h2>\n          <NewPostContainer updateNewPostText={onPostChange } \n                   newPostText={state.profile.newPostText} \n                   addPost={addPost}/>\n          <PostsListContainer />\n        </div>\n    )\n}\n\n/* let mapStateToProps = (state) => {\n  return {\n    posts: state.profile\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    updateNewPostText: (text) => {\n      dispatch(updateNewPostActionCreator(text))\n    },\n    addPost: () => {\n      dispatch(addPostActionCreator())\n    }\n\n  }\n}\n\nconst SuperMyPosts = connect(mapStateToProps,mapDispatchToProps)(MyPosts); */\n\nexport default MyPosts;"]},"metadata":{},"sourceType":"module"}