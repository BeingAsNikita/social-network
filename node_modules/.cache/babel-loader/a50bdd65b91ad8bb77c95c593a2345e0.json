{"ast":null,"code":"import { getAuthData } from \"./authReduser\";\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\nlet initialState = {\n  initialized: false\n};\nexport const appReduser = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return { ...state,\n        initialized: true\n      };\n\n    default:\n      return state;\n  }\n};\nexport const setInitializedSuccess = () => ({\n  type: INITIALIZED_SUCCESS\n});\nexport const initialized = () => dispatch => {\n  let promise = dispatch(getAuthData());\n  promise.then(() => {\n    dispatch(setInitializedSuccess());\n  });\n};","map":{"version":3,"sources":["/home/nikita/Documents/it-kama/it-kama/src/redux/appReduser.js"],"names":["getAuthData","INITIALIZED_SUCCESS","initialState","initialized","appReduser","state","action","type","setInitializedSuccess","dispatch","promise","then"],"mappings":"AAAA,SAASA,WAAT,QAA4B,eAA5B;AAEA,MAAMC,mBAAmB,GAAG,qBAA5B;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EAAE;AADE,CAAnB;AAIA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,mBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHF,QAAAA,WAAW,EAAE;AAFV,OAAP;;AAIJ;AACI,aAAOE,KAAP;AAPR;AASH,CAVM;AAYP,OAAO,MAAMG,qBAAqB,GAAG,OAAO;AAACD,EAAAA,IAAI,EAAEN;AAAP,CAAP,CAA9B;AAEP,OAAO,MAAME,WAAW,GAAG,MAAOM,QAAD,IAAc;AAC3C,MAAIC,OAAO,GAAGD,QAAQ,CAACT,WAAW,EAAZ,CAAtB;AACAU,EAAAA,OAAO,CAACC,IAAR,CAAa,MAAM;AACfF,IAAAA,QAAQ,CAACD,qBAAqB,EAAtB,CAAR;AACH,GAFD;AAIH,CANM","sourcesContent":["import { getAuthData } from \"./authReduser\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\nlet initialState = {\n    initialized: false,\n}\n\nexport const appReduser = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n        default:\n            return state\n    }\n}\n\nexport const setInitializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const initialized = () => (dispatch) => {\n    let promise = dispatch(getAuthData());\n    promise.then(() => {\n        dispatch(setInitializedSuccess())\n    })\n    \n}"]},"metadata":{},"sourceType":"module"}