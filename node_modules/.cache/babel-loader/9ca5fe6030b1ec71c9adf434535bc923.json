{"ast":null,"code":"var _jsxFileName = \"/home/nikita/Documents/it-kama/it-kama/src/Hoc/withAuthRedirect.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nlet mapStateToPropsForRedirect = state => ({\n  isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = Component => {\n  class Redirectcomponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/Login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 44\n        }\n      });\n      return /*#__PURE__*/React.createElement(Component, Object.assign({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 20\n        }\n      }));\n    }\n\n  }\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(Redirectcomponent);\n  return ConnectedAuthRedirectComponent;\n};","map":{"version":3,"sources":["/home/nikita/Documents/it-kama/it-kama/src/Hoc/withAuthRedirect.js"],"names":["React","Redirect","connect","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","Redirectcomponent","render","props","ConnectedAuthRedirectComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,IAAIC,0BAA0B,GAAIC,KAAD,KAAY;AACzCC,EAAAA,MAAM,EAAED,KAAK,CAACE,IAAN,CAAWD;AADsB,CAAZ,CAAjC;;AAIA,OAAO,MAAME,gBAAgB,GAAIC,SAAD,IAAe;AAC3C,QAAMC,iBAAN,SAAgCT,KAAK,CAACQ,SAAtC,CAAgD;AAE5CE,IAAAA,MAAM,GAAG;AACL,UAAI,CAAC,KAAKC,KAAL,CAAWN,MAAhB,EAAwB,oBAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAExB,0BAAO,oBAAC,SAAD,oBAAe,KAAKM,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH;;AAN2C;;AAWhD,MAAIC,8BAA8B,GAAGV,OAAO,CAACC,0BAAD,CAAP,CAAoCM,iBAApC,CAArC;AAEA,SAAOG,8BAAP;AACH,CAfM","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n    class Redirectcomponent extends React.Component {\n\n        render() {\n            if (!this.props.isAuth) return <Redirect to=\"/Login\" />\n\n            return <Component {...this.props} />\n        }\n    }\n\n\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(Redirectcomponent)\n\n    return ConnectedAuthRedirectComponent;\n}\n"]},"metadata":{},"sourceType":"module"}