{"ast":null,"code":"var _jsxFileName = \"/home/nikita/Documents/it-kama/it-kama/src/components/Users/UsersContainer.jsx\";\nimport React from 'react';\nimport * as axios from 'axios';\nimport Users from './Users';\nimport { follow, unfollow, setUsers, pickPage, setTotalCount, fetch } from \"../../redux/usersReduser\";\nimport { connect } from \"react-redux\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = p => {\n      this.props.pickPage(p);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${p}&count=${this.props.pageSize}`, {\n        withCredentials: true\n      }).then(res => {\n        this.props.setUsers(res.data.items);\n        this.props.fetch();\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`, {\n      withCredentials: true\n    }).then(res => {\n      this.props.setUsers(res.data.items);\n      this.props.setTotalCount(res.data.totalCount);\n      this.props.fetch();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Users, {\n      pageSize: this.props.pageSize,\n      totalCount: this.props.totalCount,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      users: this.props.users,\n      isFetching: this.props.isFetching,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.users.users,\n    pageSize: state.users.pageSize,\n    totalCount: state.users.totalCount,\n    currentPage: state.users.currentPage,\n    isFetching: state.users.isFetching\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  pickPage,\n  setTotalCount,\n  fetch\n})(UsersContainer);","map":{"version":3,"sources":["/home/nikita/Documents/it-kama/it-kama/src/components/Users/UsersContainer.jsx"],"names":["React","axios","Users","follow","unfollow","setUsers","pickPage","setTotalCount","fetch","connect","UsersContainer","Component","onPageChanged","p","props","get","pageSize","withCredentials","then","res","data","items","componentDidMount","currentPage","totalCount","render","users","isFetching","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,QAA3B,EAAqCC,QAArC,EAA+CC,aAA/C,EAA8DC,KAA9D,QAA2E,0BAA3E;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,MAAMC,cAAN,SAA6BV,KAAK,CAACW,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAczCC,aAdyC,GAcxBC,CAAD,IAAO;AACnB,WAAKC,KAAL,CAAWR,QAAX,CAAoBO,CAApB;AACAZ,MAAAA,KAAK,CAACc,GAAN,CAAW,2DAA0DF,CAAE,UAAS,KAAKC,KAAL,CAAWE,QAAS,EAApG,EACA;AACIC,QAAAA,eAAe,EAAE;AADrB,OADA,EAIKC,IAJL,CAIUC,GAAG,IAAI;AAET,aAAKL,KAAL,CAAWT,QAAX,CAAoBc,GAAG,CAACC,IAAJ,CAASC,KAA7B;AACA,aAAKP,KAAL,CAAWN,KAAX;AACH,OARL;AAUH,KA1BwC;AAAA;;AAEzCc,EAAAA,iBAAiB,GAAG;AAChBrB,IAAAA,KAAK,CAACc,GAAN,CAAW,2DAA0D,KAAKD,KAAL,CAAWS,WAAY,UAAS,KAAKT,KAAL,CAAWE,QAAS,EAAzH,EACA;AACIC,MAAAA,eAAe,EAAE;AADrB,KADA,EAIKC,IAJL,CAIUC,GAAG,IAAI;AACT,WAAKL,KAAL,CAAWT,QAAX,CAAoBc,GAAG,CAACC,IAAJ,CAASC,KAA7B;AACA,WAAKP,KAAL,CAAWP,aAAX,CAAyBY,GAAG,CAACC,IAAJ,CAASI,UAAlC;AACA,WAAKV,KAAL,CAAWN,KAAX;AACH,KARL;AASH;;AAgBDiB,EAAAA,MAAM,GAAG;AAEL,wBAAO,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWE,QAA5B;AACH,MAAA,UAAU,EAAE,KAAKF,KAAL,CAAWU,UADpB;AAEH,MAAA,WAAW,EAAE,KAAKV,KAAL,CAAWS,WAFrB;AAGH,MAAA,aAAa,EAAE,KAAKX,aAHjB;AAIH,MAAA,MAAM,EAAE,KAAKE,KAAL,CAAWX,MAJhB;AAKH,MAAA,QAAQ,EAAE,KAAKW,KAAL,CAAWV,QALlB;AAMH,MAAA,KAAK,EAAE,KAAKU,KAAL,CAAWY,KANf;AAOH,MAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWa,UAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AASH;;AAvCwC;;AA0C7C,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAG7B,SAAO;AACHH,IAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYA,KADhB;AAEHV,IAAAA,QAAQ,EAAEa,KAAK,CAACH,KAAN,CAAYV,QAFnB;AAGHQ,IAAAA,UAAU,EAAEK,KAAK,CAACH,KAAN,CAAYF,UAHrB;AAIHD,IAAAA,WAAW,EAAEM,KAAK,CAACH,KAAN,CAAYH,WAJtB;AAKHI,IAAAA,UAAU,EAAEE,KAAK,CAACH,KAAN,CAAYC;AALrB,GAAP;AAOH,CAVD;;AAYA,eAAelB,OAAO,CAACmB,eAAD,EAAkB;AAACzB,EAAAA,MAAD;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA,QAA7B;AAAuCC,EAAAA,aAAvC;AAAsDC,EAAAA;AAAtD,CAAlB,CAAP,CAAuFE,cAAvF,CAAf","sourcesContent":["import React from 'react';\nimport * as axios from 'axios';\nimport Users from './Users';\nimport { follow, unfollow, setUsers, pickPage, setTotalCount, fetch } from \"../../redux/usersReduser\";\nimport { connect } from \"react-redux\";\n\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`,\n        {\n            withCredentials: true,\n        })\n            .then(res => {\n                this.props.setUsers(res.data.items)\n                this.props.setTotalCount(res.data.totalCount)\n                this.props.fetch() \n            })\n    }\n\n    onPageChanged = (p) => {\n        this.props.pickPage(p)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${p}&count=${this.props.pageSize}`,\n        {\n            withCredentials: true,\n        })\n            .then(res => {\n\n                this.props.setUsers(res.data.items)\n                this.props.fetch() \n            }\n        )\n    }\n\n    render() {\n\n        return <Users pageSize={this.props.pageSize}\n            totalCount={this.props.totalCount}\n            currentPage={this.props.currentPage}\n            onPageChanged={this.onPageChanged}\n            follow={this.props.follow}\n            unfollow={this.props.unfollow}\n            users={this.props.users}\n            isFetching={this.props.isFetching}\n        />\n    }\n}\n\nlet mapStateToProps = (state) => {\n\n\n    return {\n        users: state.users.users,\n        pageSize: state.users.pageSize,\n        totalCount: state.users.totalCount,\n        currentPage: state.users.currentPage,\n        isFetching: state.users.isFetching,\n    }\n}\n\nexport default connect(mapStateToProps, {follow, unfollow, setUsers, pickPage, setTotalCount, fetch})(UsersContainer);\n"]},"metadata":{},"sourceType":"module"}