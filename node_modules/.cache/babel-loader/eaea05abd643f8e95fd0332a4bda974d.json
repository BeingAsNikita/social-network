{"ast":null,"code":"var _jsxFileName = \"/home/nikita/Documents/it-kama/it-kama/src/components/Users/UsersContainer.jsx\";\nimport React from 'react';\nimport Users from './Users';\nimport { follow, unfollow, setUsers, pickPage, setTotalCount, fetch, toggleFollowingProgress, getUsersThunkCreator } from \"../../redux/usersReduser\";\nimport { connect } from \"react-redux\";\nimport { getUsers } from '../../api/api';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = p => {\n      this.props.pickPage(p);\n      getUsers(p, this.props.pageSize).then(data => {\n        this.props.setUsers(data.items);\n        this.props.fetch();\n      });\n    };\n  }\n\n  componentDidMount() {\n    getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n      this.props.setUsers(data.items);\n      this.props.setTotalCount(data.totalCount);\n      this.props.fetch();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Users, {\n      pageSize: this.props.pageSize,\n      totalCount: this.props.totalCount,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      users: this.props.users,\n      isFetching: this.props.isFetching,\n      toggleFollowingProgress: this.props.toggleFollowingProgress,\n      followingInProgress: this.props.followingInProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.users.users,\n    pageSize: state.users.pageSize,\n    totalCount: state.users.totalCount,\n    currentPage: state.users.currentPage,\n    isFetching: state.users.isFetching,\n    followingInProgress: state.users.followingInProgress\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  pickPage,\n  setTotalCount,\n  fetch,\n  toggleFollowingProgress,\n  getUsersThunkCreator\n})(UsersContainer);","map":{"version":3,"sources":["/home/nikita/Documents/it-kama/it-kama/src/components/Users/UsersContainer.jsx"],"names":["React","Users","follow","unfollow","setUsers","pickPage","setTotalCount","fetch","toggleFollowingProgress","getUsersThunkCreator","connect","getUsers","UsersContainer","Component","onPageChanged","p","props","pageSize","then","data","items","componentDidMount","currentPage","totalCount","render","users","isFetching","followingInProgress","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,QAA3B,EAAqCC,QAArC,EAA+CC,aAA/C,EAA8DC,KAA9D,EAAqEC,uBAArE,EAA6FC,oBAA7F,QAAyH,0BAAzH;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,eAAzB;;AAGA,MAAMC,cAAN,SAA6BZ,KAAK,CAACa,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAUzCC,aAVyC,GAUxBC,CAAD,IAAO;AACnB,WAAKC,KAAL,CAAWX,QAAX,CAAoBU,CAApB;AACAJ,MAAAA,QAAQ,CAACI,CAAD,EAAI,KAAKC,KAAL,CAAWC,QAAf,CAAR,CACKC,IADL,CACUC,IAAI,IAAI;AAEV,aAAKH,KAAL,CAAWZ,QAAX,CAAoBe,IAAI,CAACC,KAAzB;AACA,aAAKJ,KAAL,CAAWT,KAAX;AACH,OALL;AAOH,KAnBwC;AAAA;;AAEzCc,EAAAA,iBAAiB,GAAG;AAChBV,IAAAA,QAAQ,CAAC,KAAKK,KAAL,CAAWM,WAAZ,EAAyB,KAAKN,KAAL,CAAWC,QAApC,CAAR,CAAsDC,IAAtD,CAA2DC,IAAI,IAAI;AAC3D,WAAKH,KAAL,CAAWZ,QAAX,CAAoBe,IAAI,CAACC,KAAzB;AACA,WAAKJ,KAAL,CAAWV,aAAX,CAAyBa,IAAI,CAACI,UAA9B;AACA,WAAKP,KAAL,CAAWT,KAAX;AACH,KAJL;AAKH;;AAaDiB,EAAAA,MAAM,GAAG;AAEL,wBAAO,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWC,QAA5B;AACH,MAAA,UAAU,EAAE,KAAKD,KAAL,CAAWO,UADpB;AAEH,MAAA,WAAW,EAAE,KAAKP,KAAL,CAAWM,WAFrB;AAGH,MAAA,aAAa,EAAE,KAAKR,aAHjB;AAIH,MAAA,MAAM,EAAE,KAAKE,KAAL,CAAWd,MAJhB;AAKH,MAAA,QAAQ,EAAE,KAAKc,KAAL,CAAWb,QALlB;AAMH,MAAA,KAAK,EAAE,KAAKa,KAAL,CAAWS,KANf;AAOH,MAAA,UAAU,EAAE,KAAKT,KAAL,CAAWU,UAPpB;AAQH,MAAA,uBAAuB,EAAI,KAAKV,KAAL,CAAWR,uBARnC;AASH,MAAA,mBAAmB,EAAI,KAAKQ,KAAL,CAAWW,mBAT/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAWH;;AAlCwC;;AAqC7C,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAG7B,SAAO;AACHJ,IAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYA,KADhB;AAEHR,IAAAA,QAAQ,EAAEY,KAAK,CAACJ,KAAN,CAAYR,QAFnB;AAGHM,IAAAA,UAAU,EAAEM,KAAK,CAACJ,KAAN,CAAYF,UAHrB;AAIHD,IAAAA,WAAW,EAAEO,KAAK,CAACJ,KAAN,CAAYH,WAJtB;AAKHI,IAAAA,UAAU,EAAEG,KAAK,CAACJ,KAAN,CAAYC,UALrB;AAMHC,IAAAA,mBAAmB,EAAEE,KAAK,CAACJ,KAAN,CAAYE;AAN9B,GAAP;AAQH,CAXD;;AAaA,eAAejB,OAAO,CAACkB,eAAD,EAClB;AAAC1B,EAAAA,MAAD;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,QAAnB;AACAC,EAAAA,QADA;AACUC,EAAAA,aADV;AACyBC,EAAAA,KADzB;AAEAC,EAAAA,uBAFA;AAEyBC,EAAAA;AAFzB,CADkB,CAAP,CAGqCG,cAHrC,CAAf","sourcesContent":["import React from 'react';\nimport Users from './Users';\nimport { follow, unfollow, setUsers, pickPage, setTotalCount, fetch, toggleFollowingProgress,getUsersThunkCreator } from \"../../redux/usersReduser\";\nimport { connect } from \"react-redux\";\nimport { getUsers } from '../../api/api';\n\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n                this.props.setUsers(data.items)\n                this.props.setTotalCount(data.totalCount)\n                this.props.fetch() \n            })\n    }\n\n    onPageChanged = (p) => {\n        this.props.pickPage(p);\n        getUsers(p, this.props.pageSize)\n            .then(data => {\n\n                this.props.setUsers(data.items)\n                this.props.fetch() \n            }\n        )\n    }\n\n    render() {\n\n        return <Users pageSize={this.props.pageSize}\n            totalCount={this.props.totalCount}\n            currentPage={this.props.currentPage}\n            onPageChanged={this.onPageChanged}\n            follow={this.props.follow}\n            unfollow={this.props.unfollow}\n            users={this.props.users}\n            isFetching={this.props.isFetching}\n            toggleFollowingProgress = {this.props.toggleFollowingProgress}\n            followingInProgress = {this.props.followingInProgress}\n        />\n    }\n}\n\nlet mapStateToProps = (state) => {\n\n\n    return {\n        users: state.users.users,\n        pageSize: state.users.pageSize,\n        totalCount: state.users.totalCount,\n        currentPage: state.users.currentPage,\n        isFetching: state.users.isFetching,\n        followingInProgress: state.users.followingInProgress,\n    }\n}\n\nexport default connect(mapStateToProps, \n    {follow, unfollow, setUsers, \n    pickPage, setTotalCount, fetch, \n    toggleFollowingProgress ,getUsersThunkCreator})(UsersContainer);\n"]},"metadata":{},"sourceType":"module"}