{"ast":null,"code":"import { getUsers, unfollowUser, followUser } from \"../api/api\";\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst PICK_PAGE = 'PICK_PAGE';\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\nconst FETCH_USERS = 'FETCH_USERS';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'FOLLOWING_IN_PROGRESS';\nexport const followSuccess = id => ({\n  type: FOLLOW,\n  payload: id\n});\nexport const unfollowSuccess = id => ({\n  type: UNFOLLOW,\n  payload: id\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  payload: users\n});\nexport const pickPage = page => ({\n  type: PICK_PAGE,\n  payload: page\n});\nexport const setTotalCount = totalCount => ({\n  type: SET_TOTAL_COUNT,\n  payload: totalCount\n});\nexport const fetch = () => ({\n  type: FETCH_USERS\n});\nexport const toggleFollowingProgress = (isFetching, id) => ({\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\n  payload: isFetching,\n  id: id\n});\nlet initialState = {\n  users: [],\n  totalCount: 0,\n  pageSize: 5,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: []\n};\nexport const usersReduser = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      let stateCopy = { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.payload) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n      return stateCopy;\n\n    case UNFOLLOW:\n      {\n        let stateCopy = { ...state,\n          users: state.users.map(u => {\n            if (u.id === action.payload) {\n              return { ...u,\n                followed: false\n              };\n            }\n\n            return u;\n          })\n        };\n        return stateCopy;\n      }\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: action.payload.reverse(),\n          isFetching: false\n        };\n      }\n\n    case PICK_PAGE:\n      return { ...state,\n        currentPage: action.payload,\n        isFetching: false\n      };\n\n    case SET_TOTAL_COUNT:\n      return { ...state,\n        totalCount: action.payload,\n        isFetching: false\n      };\n\n    case FETCH_USERS:\n      return { ...state,\n        isFetching: true\n      };\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return { ...state,\n        followingInProgress: action.payload ? [...state.followingInProgress, action.id] : state.followingInProgress.filter(id => id !== action.id)\n      };\n\n    default:\n      return state;\n  }\n};\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\n  return dispatch => {\n    getUsers(currentPage, pageSize).then(data => {\n      dispatch(setUsers(data.items));\n      dispatch(setTotalCount(data.totalCount));\n      dispatch(fetch());\n    });\n  };\n};\nexport const follow = id => {\n  return dispatch => {\n    dispatch(toggleFollowingProgress(true, id));\n    dispatch(followUser(id).then(data => {\n      if (data.resultCode === 0) {\n        dispatch(follow(id));\n      }\n\n      dispatch(toggleFollowingProgress(false));\n    }));\n  };\n};\nexport const unfollow = id => {\n  return dispatch => {\n    dispatch(toggleFollowingProgress(true, id));\n    dispatch(unfollowUser(id).then(data => {\n      if (data.resultCode === 0) {\n        dispatch(unfollowSuccess(id));\n      }\n\n      dispatch(toggleFollowingProgress(false, id));\n    }));\n  };\n};\nexport default usersReduser;","map":{"version":3,"sources":["/home/nikita/Documents/it-kama/it-kama/src/redux/usersReduser.js"],"names":["getUsers","unfollowUser","followUser","FOLLOW","UNFOLLOW","SET_USERS","PICK_PAGE","SET_TOTAL_COUNT","FETCH_USERS","TOGGLE_IS_FOLLOWING_PROGRESS","followSuccess","id","type","payload","unfollowSuccess","setUsers","users","pickPage","page","setTotalCount","totalCount","fetch","toggleFollowingProgress","isFetching","initialState","pageSize","currentPage","followingInProgress","usersReduser","state","action","stateCopy","map","u","followed","reverse","filter","getUsersThunkCreator","dispatch","then","data","items","follow","resultCode","unfollow"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,YAAnB,EAAiCC,UAAjC,QAAmD,YAAnD;AAEA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,eAAe,GAAG,iBAAxB;AACA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,4BAA4B,GAAG,uBAArC;AAKA,OAAO,MAAMC,aAAa,GAAIC,EAAD,KAAS;AAAEC,EAAAA,IAAI,EAAET,MAAR;AAAgBU,EAAAA,OAAO,EAAEF;AAAzB,CAAT,CAAtB;AACP,OAAO,MAAMG,eAAe,GAAIH,EAAD,KAAS;AAAEC,EAAAA,IAAI,EAAER,QAAR;AAAkBS,EAAAA,OAAO,EAAEF;AAA3B,CAAT,CAAxB;AACP,OAAO,MAAMI,QAAQ,GAAIC,KAAD,KAAY;AAAEJ,EAAAA,IAAI,EAAEP,SAAR;AAAmBQ,EAAAA,OAAO,EAAEG;AAA5B,CAAZ,CAAjB;AACP,OAAO,MAAMC,QAAQ,GAAIC,IAAD,KAAW;AAAEN,EAAAA,IAAI,EAAEN,SAAR;AAAmBO,EAAAA,OAAO,EAAEK;AAA5B,CAAX,CAAjB;AACP,OAAO,MAAMC,aAAa,GAAIC,UAAD,KAAiB;AAAER,EAAAA,IAAI,EAAEL,eAAR;AAAyBM,EAAAA,OAAO,EAAEO;AAAlC,CAAjB,CAAtB;AACP,OAAO,MAAMC,KAAK,GAAG,OAAO;AAAET,EAAAA,IAAI,EAAEJ;AAAR,CAAP,CAAd;AACP,OAAO,MAAMc,uBAAuB,GAAG,CAACC,UAAD,EAAaZ,EAAb,MAAqB;AAAEC,EAAAA,IAAI,EAAEH,4BAAR;AAAsCI,EAAAA,OAAO,EAAEU,UAA/C;AAA2DZ,EAAAA,EAAE,EAAEA;AAA/D,CAArB,CAAhC;AAKP,IAAIa,YAAY,GAAG;AACfR,EAAAA,KAAK,EAAE,EADQ;AAEfI,EAAAA,UAAU,EAAE,CAFG;AAGfK,EAAAA,QAAQ,EAAE,CAHK;AAIfC,EAAAA,WAAW,EAAE,CAJE;AAKfH,EAAAA,UAAU,EAAE,KALG;AAMfI,EAAAA,mBAAmB,EAAE;AANN,CAAnB;AASA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC1D,UAAQA,MAAM,CAAClB,IAAf;AACI,SAAKT,MAAL;AACI,UAAI4B,SAAS,GAAG,EACZ,GAAGF,KADS;AAEZb,QAAAA,KAAK,EAAEa,KAAK,CAACb,KAAN,CAAYgB,GAAZ,CAAgBC,CAAC,IAAI;AACxB,cAAIA,CAAC,CAACtB,EAAF,KAASmB,MAAM,CAACjB,OAApB,EAA6B;AACzB,mBAAO,EAAE,GAAGoB,CAAL;AAAQC,cAAAA,QAAQ,EAAE;AAAlB,aAAP;AACH;;AACD,iBAAOD,CAAP;AACH,SALM;AAFK,OAAhB;AASA,aAAOF,SAAP;;AAEJ,SAAK3B,QAAL;AAAe;AACX,YAAI2B,SAAS,GAAG,EACZ,GAAGF,KADS;AAEZb,UAAAA,KAAK,EAAEa,KAAK,CAACb,KAAN,CAAYgB,GAAZ,CAAgBC,CAAC,IAAI;AACxB,gBAAIA,CAAC,CAACtB,EAAF,KAASmB,MAAM,CAACjB,OAApB,EAA6B;AACzB,qBAAO,EAAE,GAAGoB,CAAL;AAAQC,gBAAAA,QAAQ,EAAE;AAAlB,eAAP;AACH;;AACD,mBAAOD,CAAP;AACH,WALM;AAFK,SAAhB;AASA,eAAOF,SAAP;AACH;;AACD,SAAK1B,SAAL;AAAgB;AACZ,eAAO,EAAE,GAAGwB,KAAL;AAAYb,UAAAA,KAAK,EAAEc,MAAM,CAACjB,OAAP,CAAesB,OAAf,EAAnB;AAA6CZ,UAAAA,UAAU,EAAE;AAAzD,SAAP;AACH;;AAED,SAAKjB,SAAL;AACI,aAAO,EAAE,GAAGuB,KAAL;AAAYH,QAAAA,WAAW,EAAEI,MAAM,CAACjB,OAAhC;AAAyCU,QAAAA,UAAU,EAAE;AAArD,OAAP;;AAEJ,SAAKhB,eAAL;AACI,aAAO,EAAE,GAAGsB,KAAL;AAAYT,QAAAA,UAAU,EAAEU,MAAM,CAACjB,OAA/B;AAAwCU,QAAAA,UAAU,EAAE;AAApD,OAAP;;AAEJ,SAAKf,WAAL;AACI,aAAO,EAAE,GAAGqB,KAAL;AAAYN,QAAAA,UAAU,EAAE;AAAxB,OAAP;;AAEJ,SAAKd,4BAAL;AACI,aAAO,EACH,GAAGoB,KADA;AAEHF,QAAAA,mBAAmB,EAAEG,MAAM,CAACjB,OAAP,GACf,CAAC,GAAGgB,KAAK,CAACF,mBAAV,EAA+BG,MAAM,CAACnB,EAAtC,CADe,GAEfkB,KAAK,CAACF,mBAAN,CAA0BS,MAA1B,CAAiCzB,EAAE,IAAIA,EAAE,KAAKmB,MAAM,CAACnB,EAArD;AAJH,OAAP;;AAOJ;AACI,aAAOkB,KAAP;AA/CR;AAiDH,CAlDM;AAqDP,OAAO,MAAMQ,oBAAoB,GAAG,CAACX,WAAD,EAAaD,QAAb,KAA0B;AAC1D,SAAQa,QAAD,IAAc;AACjBtC,IAAAA,QAAQ,CAAC0B,WAAD,EAAcD,QAAd,CAAR,CAAgCc,IAAhC,CAAqCC,IAAI,IAAI;AACzCF,MAAAA,QAAQ,CAACvB,QAAQ,CAACyB,IAAI,CAACC,KAAN,CAAT,CAAR;AACAH,MAAAA,QAAQ,CAACnB,aAAa,CAACqB,IAAI,CAACpB,UAAN,CAAd,CAAR;AACAkB,MAAAA,QAAQ,CAACjB,KAAK,EAAN,CAAR;AACH,KAJD;AAKH,GAND;AAOH,CARM;AAUP,OAAO,MAAMqB,MAAM,GAAI/B,EAAD,IAAQ;AAC1B,SAAQ2B,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAAChB,uBAAuB,CAAC,IAAD,EAAMX,EAAN,CAAxB,CAAR;AAEA2B,IAAAA,QAAQ,CAACpC,UAAU,CAACS,EAAD,CAAV,CAAe4B,IAAf,CAAoBC,IAAI,IAAI;AAEjC,UAAIA,IAAI,CAACG,UAAL,KAAoB,CAAxB,EAA2B;AACvBL,QAAAA,QAAQ,CAACI,MAAM,CAAC/B,EAAD,CAAP,CAAR;AACH;;AACD2B,MAAAA,QAAQ,CAAChB,uBAAuB,CAAC,KAAD,CAAxB,CAAR;AAEH,KAPQ,CAAD,CAAR;AAQH,GAXD;AAYH,CAbM;AAeP,OAAO,MAAMsB,QAAQ,GAAIjC,EAAD,IAAQ;AAC5B,SAAQ2B,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAAChB,uBAAuB,CAAC,IAAD,EAAOX,EAAP,CAAxB,CAAR;AAEA2B,IAAAA,QAAQ,CAACrC,YAAY,CAACU,EAAD,CAAZ,CAAiB4B,IAAjB,CAAsBC,IAAI,IAAI;AACnC,UAAIA,IAAI,CAACG,UAAL,KAAoB,CAAxB,EAA2B;AACvBL,QAAAA,QAAQ,CAACxB,eAAe,CAACH,EAAD,CAAhB,CAAR;AACH;;AACD2B,MAAAA,QAAQ,CAAChB,uBAAuB,CAAC,KAAD,EAAQX,EAAR,CAAxB,CAAR;AAEH,KANQ,CAAD,CAAR;AAOH,GAVD;AAWH,CAZM;AAcP,eAAeiB,YAAf","sourcesContent":["import { getUsers, unfollowUser, followUser } from \"../api/api\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst PICK_PAGE = 'PICK_PAGE';\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\nconst FETCH_USERS = 'FETCH_USERS';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'FOLLOWING_IN_PROGRESS';\n\n\n\n\nexport const followSuccess = (id) => ({ type: FOLLOW, payload: id, })\nexport const unfollowSuccess = (id) => ({ type: UNFOLLOW, payload: id, })\nexport const setUsers = (users) => ({ type: SET_USERS, payload: users, })\nexport const pickPage = (page) => ({ type: PICK_PAGE, payload: page, })\nexport const setTotalCount = (totalCount) => ({ type: SET_TOTAL_COUNT, payload: totalCount, })\nexport const fetch = () => ({ type: FETCH_USERS })\nexport const toggleFollowingProgress = (isFetching, id) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, payload: isFetching, id: id })\n\n\n\n\nlet initialState = {\n    users: [],\n    totalCount: 0,\n    pageSize: 5,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: [],\n}\n\nexport const usersReduser = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            let stateCopy = {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.payload) {\n                        return { ...u, followed: true }\n                    }\n                    return u\n                })\n            }\n            return stateCopy\n\n        case UNFOLLOW: {\n            let stateCopy = {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.payload) {\n                        return { ...u, followed: false }\n                    }\n                    return u\n                })\n            }\n            return stateCopy\n        }\n        case SET_USERS: {\n            return { ...state, users: action.payload.reverse(), isFetching: false }\n        }\n\n        case PICK_PAGE:\n            return { ...state, currentPage: action.payload, isFetching: false }\n\n        case SET_TOTAL_COUNT:\n            return { ...state, totalCount: action.payload, isFetching: false }\n\n        case FETCH_USERS:\n            return { ...state, isFetching: true }\n\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\n            return {\n                ...state,\n                followingInProgress: action.payload\n                    ? [...state.followingInProgress, action.id]\n                    : state.followingInProgress.filter(id => id !== action.id)\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport const getUsersThunkCreator = (currentPage,pageSize) => {\n    return (dispatch) => {\n        getUsers(currentPage, pageSize).then(data => {\n            dispatch(setUsers(data.items))\n            dispatch(setTotalCount(data.totalCount))\n            dispatch(fetch())\n        })\n    }\n}\n\nexport const follow = (id) => {\n    return (dispatch) => {\n        dispatch(toggleFollowingProgress(true,id));\n\n        dispatch(followUser(id).then(data => {\n            \n            if (data.resultCode === 0) {\n                dispatch(follow(id));\n            }\n            dispatch(toggleFollowingProgress(false));\n\n        }))\n    }\n}\n\nexport const unfollow = (id) => {\n    return (dispatch) => {\n        dispatch(toggleFollowingProgress(true, id));\n\n        dispatch(unfollowUser(id).then(data => {\n            if (data.resultCode === 0) {\n                dispatch(unfollowSuccess(id))\n            }\n            dispatch(toggleFollowingProgress(false, id));\n\n        }))\n    }\n}\n\nexport default usersReduser;"]},"metadata":{},"sourceType":"module"}