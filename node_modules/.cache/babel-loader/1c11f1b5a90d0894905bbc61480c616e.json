{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst PICK_PAGE = 'PICK_PAGE';\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\nconst FETCH_USERS = 'FETCH_USERS';\nexport const followAC = id => ({\n  type: FOLLOW,\n  payload: id\n});\nexport const unfollowAC = id => ({\n  type: UNFOLLOW,\n  payload: id\n});\nexport const setUsersAC = users => ({\n  type: SET_USERS,\n  payload: users\n});\nexport const pickPageAC = page => ({\n  type: PICK_PAGE,\n  payload: page\n});\nexport const setTotalCountAC = totalCount => ({\n  type: SET_TOTAL_COUNT,\n  payload: totalCount\n});\nexport const fetchAC = () => ({\n  type: FETCH_USERS\n});\nlet initialState = {\n  users: [],\n  totalCount: 0,\n  pageSize: 5,\n  currentPage: 1,\n  isFetching: true\n};\nexport const usersReduser = (state = initialState, action) => {\n  debugger;\n\n  switch (action.type) {\n    case FOLLOW:\n      let stateCopy = { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.payload) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n      return stateCopy;\n\n    case UNFOLLOW:\n      {\n        let stateCopy = { ...state,\n          users: state.users.map(u => {\n            if (u.id === action.payload) {\n              return { ...u,\n                followed: false\n              };\n            }\n\n            return u;\n          })\n        };\n        return stateCopy;\n      }\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: action.payload,\n          isFetching: false\n        };\n      }\n\n    case PICK_PAGE:\n      return { ...state,\n        currentPage: action.payload,\n        isFetching: false\n      };\n\n    case SET_TOTAL_COUNT:\n      return { ...state,\n        totalCount: action.payload,\n        isFetching: false\n      };\n\n    case FETCH_USERS:\n      return { ...state,\n        isFetching: true\n      };\n\n    default:\n      return state;\n  }\n};\nexport default usersReduser;","map":{"version":3,"sources":["/home/nikita/Documents/it-kama/it-kama/src/redux/usersReduser.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","PICK_PAGE","SET_TOTAL_COUNT","FETCH_USERS","followAC","id","type","payload","unfollowAC","setUsersAC","users","pickPageAC","page","setTotalCountAC","totalCount","fetchAC","initialState","pageSize","currentPage","isFetching","usersReduser","state","action","stateCopy","map","u","followed"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,eAAe,GAAG,iBAAxB;AACA,MAAMC,WAAW,GAAG,aAApB;AAKA,OAAO,MAAMC,QAAQ,GAAIC,EAAD,KAAS;AAAEC,EAAAA,IAAI,EAAER,MAAR;AAAgBS,EAAAA,OAAO,EAAEF;AAAzB,CAAT,CAAjB;AACP,OAAO,MAAMG,UAAU,GAAIH,EAAD,KAAS;AAAEC,EAAAA,IAAI,EAAEP,QAAR;AAAkBQ,EAAAA,OAAO,EAAEF;AAA3B,CAAT,CAAnB;AACP,OAAO,MAAMI,UAAU,GAAIC,KAAD,KAAY;AAAEJ,EAAAA,IAAI,EAAEN,SAAR;AAAmBO,EAAAA,OAAO,EAAEG;AAA5B,CAAZ,CAAnB;AACP,OAAO,MAAMC,UAAU,GAAIC,IAAD,KAAW;AAAEN,EAAAA,IAAI,EAAEL,SAAR;AAAmBM,EAAAA,OAAO,EAAEK;AAA5B,CAAX,CAAnB;AACP,OAAO,MAAMC,eAAe,GAAIC,UAAD,KAAiB;AAAER,EAAAA,IAAI,EAAEJ,eAAR;AAAyBK,EAAAA,OAAO,EAAEO;AAAlC,CAAjB,CAAxB;AACP,OAAO,MAAMC,OAAO,GAAG,OAAO;AAAET,EAAAA,IAAI,EAAEH;AAAR,CAAP,CAAhB;AAKP,IAAIa,YAAY,GAAG;AACfN,EAAAA,KAAK,EAAE,EADQ;AAEfI,EAAAA,UAAU,EAAE,CAFG;AAGfG,EAAAA,QAAQ,EAAE,CAHK;AAIfC,EAAAA,WAAW,EAAE,CAJE;AAKfC,EAAAA,UAAU,EAAE;AALG,CAAnB;AAQA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC1D;;AACA,UAAQA,MAAM,CAAChB,IAAf;AACI,SAAKR,MAAL;AACI,UAAIyB,SAAS,GAAG,EACZ,GAAGF,KADS;AAEZX,QAAAA,KAAK,EAAEW,KAAK,CAACX,KAAN,CAAYc,GAAZ,CAAgBC,CAAC,IAAI;AACxB,cAAIA,CAAC,CAACpB,EAAF,KAASiB,MAAM,CAACf,OAApB,EAA6B;AACzB,mBAAO,EAAE,GAAGkB,CAAL;AAAQC,cAAAA,QAAQ,EAAE;AAAlB,aAAP;AACH;;AACD,iBAAOD,CAAP;AACH,SALM;AAFK,OAAhB;AASA,aAAOF,SAAP;;AAEJ,SAAKxB,QAAL;AAAe;AACX,YAAIwB,SAAS,GAAG,EACZ,GAAGF,KADS;AAEZX,UAAAA,KAAK,EAAEW,KAAK,CAACX,KAAN,CAAYc,GAAZ,CAAgBC,CAAC,IAAI;AACxB,gBAAIA,CAAC,CAACpB,EAAF,KAASiB,MAAM,CAACf,OAApB,EAA6B;AACzB,qBAAO,EAAE,GAAGkB,CAAL;AAAQC,gBAAAA,QAAQ,EAAE;AAAlB,eAAP;AACH;;AACD,mBAAOD,CAAP;AACH,WALM;AAFK,SAAhB;AASA,eAAOF,SAAP;AACH;;AACD,SAAKvB,SAAL;AAAgB;AACZ,eAAO,EAAE,GAAGqB,KAAL;AAAYX,UAAAA,KAAK,EAAEY,MAAM,CAACf,OAA1B;AAAmCY,UAAAA,UAAU,EAAE;AAA/C,SAAP;AACH;;AAED,SAAKlB,SAAL;AACI,aAAO,EAAE,GAAGoB,KAAL;AAAYH,QAAAA,WAAW,EAAEI,MAAM,CAACf,OAAhC;AAAyCY,QAAAA,UAAU,EAAE;AAArD,OAAP;;AAEJ,SAAKjB,eAAL;AACI,aAAO,EAAE,GAAGmB,KAAL;AAAYP,QAAAA,UAAU,EAAEQ,MAAM,CAACf,OAA/B;AAAwCY,QAAAA,UAAU,EAAE;AAApD,OAAP;;AAEJ,SAAKhB,WAAL;AACI,aAAO,EAAE,GAAGkB,KAAL;AAAYF,QAAAA,UAAU,EAAE;AAAxB,OAAP;;AAEJ;AACI,aAAOE,KAAP;AAvCR;AAyCH,CA3CM;AA6CP,eAAeD,YAAf","sourcesContent":["const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst PICK_PAGE = 'PICK_PAGE';\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\nconst FETCH_USERS = 'FETCH_USERS';\n\n\n\n\nexport const followAC = (id) => ({ type: FOLLOW, payload: id, })\nexport const unfollowAC = (id) => ({ type: UNFOLLOW, payload: id, })\nexport const setUsersAC = (users) => ({ type: SET_USERS, payload: users, })\nexport const pickPageAC = (page) => ({ type: PICK_PAGE, payload: page, })\nexport const setTotalCountAC = (totalCount) => ({ type: SET_TOTAL_COUNT, payload: totalCount, })\nexport const fetchAC = () => ({ type: FETCH_USERS })\n\n\n\n\nlet initialState = {\n    users: [],\n    totalCount: 0,\n    pageSize: 5,\n    currentPage: 1,\n    isFetching: true,\n}\n\nexport const usersReduser = (state = initialState, action) => {\n    debugger\n    switch (action.type) {\n        case FOLLOW:\n            let stateCopy = {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.payload) {\n                        return { ...u, followed: true }\n                    }\n                    return u\n                })\n            }\n            return stateCopy\n\n        case UNFOLLOW: {\n            let stateCopy = {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.payload) {\n                        return { ...u, followed: false }\n                    }\n                    return u\n                })\n            }\n            return stateCopy\n        }\n        case SET_USERS: {\n            return { ...state, users: action.payload, isFetching: false }\n        }\n\n        case PICK_PAGE:\n            return { ...state, currentPage: action.payload, isFetching: false }\n\n        case SET_TOTAL_COUNT:\n            return { ...state, totalCount: action.payload, isFetching: false }\n\n        case FETCH_USERS:\n            return { ...state, isFetching: true }\n\n        default:\n            return state\n    }\n}\n\nexport default usersReduser;"]},"metadata":{},"sourceType":"module"}