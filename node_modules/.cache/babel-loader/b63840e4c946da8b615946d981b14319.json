{"ast":null,"code":"import { sendMessageActionCreator, updateNewMessageActionCreator } from '../../redux/dialogsReduser';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = state => {\n  return {\n    state: state.dialogs,\n    isAuth: state.auth.isAuth\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    updateNewMessageText: text => {\n      dispatch(updateNewMessageActionCreator(text));\n    },\n    sendMessage: () => {\n      dispatch(sendMessageActionCreator());\n    }\n  };\n};\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\nexport default DialogsContainer;","map":{"version":3,"sources":["/home/nikita/Documents/it-kama/it-kama/src/components/Dialogs/DialogsContainer.jsx"],"names":["sendMessageActionCreator","updateNewMessageActionCreator","Dialogs","connect","mapStateToProps","state","dialogs","isAuth","auth","mapDispatchToProps","dispatch","updateNewMessageText","text","sendMessage","DialogsContainer"],"mappings":"AACA,SACIA,wBADJ,EAEIC,6BAFJ,QAGO,4BAHP;AAIA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAIA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACLA,IAAAA,KAAK,EAAEA,KAAK,CAACC,OADR;AAELC,IAAAA,MAAM,EAAEF,KAAK,CAACG,IAAN,CAAWD;AAFd,GAAP;AAID,CALH;;AAOE,IAAIE,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACLC,IAAAA,oBAAoB,EAAGC,IAAD,IAAU;AAC5BF,MAAAA,QAAQ,CAACT,6BAA6B,CAACW,IAAD,CAA9B,CAAR;AACH,KAHI;AAILC,IAAAA,WAAW,EAAE,MAAM;AACfH,MAAAA,QAAQ,CAACV,wBAAwB,EAAzB,CAAR;AACH;AANI,GAAP;AAQD,CATD;;AAWA,MAAMc,gBAAgB,GAAGX,OAAO,CAACC,eAAD,EAAiBK,kBAAjB,CAAP,CAA4CP,OAA5C,CAAzB;AAEF,eAAeY,gBAAf","sourcesContent":["\nimport {\n    sendMessageActionCreator, \n    updateNewMessageActionCreator\n} from '../../redux/dialogsReduser';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n      state: state.dialogs,\n      isAuth: state.auth.isAuth\n    }\n  }\n  \n  let mapDispatchToProps = (dispatch) => {\n    return {\n      updateNewMessageText: (text) => {\n          dispatch(updateNewMessageActionCreator(text))\n      },\n      sendMessage: () => {\n          dispatch(sendMessageActionCreator())\n      }\n    }\n  }\n  \n  const DialogsContainer = connect(mapStateToProps,mapDispatchToProps)(Dialogs)\n\nexport default DialogsContainer;"]},"metadata":{},"sourceType":"module"}