{"ast":null,"code":"const SEND_MESSAGE = 'SEND_MESSAGE';\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE_NEW_MESSAGE_TEXT';\nexport const sendMessageActionCreator = () => ({\n  type: SEND_MESSAGE\n});\nexport const updateNewMessageActionCreator = text => {\n  return {\n    type: UPDATE_NEW_MESSAGE_TEXT,\n    payload: text\n  };\n};\nlet initialState = {};\n\nconst dialogsReduser = (state = initialState, action) => {\n  switch (action.type) {\n    case SEND_MESSAGE:\n      if (state.newMessageText !== '') {\n        let date = new Date();\n        let newMessage = {\n          id: state.message.length + 1,\n          date: date.getHours() + ':' + date.getMinutes(),\n          text: state.newMessageText\n        };\n        state.message.push(newMessage);\n      }\n\n      state.newMessageText = '';\n      return state;\n\n    case UPDATE_NEW_MESSAGE_TEXT:\n      state.newMessageText = action.payload;\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default dialogsReduser;","map":{"version":3,"sources":["/home/nikita/Documents/it-kama/it-kama/src/redux/dialogsReduser.js"],"names":["SEND_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","sendMessageActionCreator","type","updateNewMessageActionCreator","text","payload","initialState","dialogsReduser","state","action","newMessageText","date","Date","newMessage","id","message","length","getHours","getMinutes","push"],"mappings":"AAAA,MAAMA,YAAY,GAAG,cAArB;AACA,MAAMC,uBAAuB,GAAG,yBAAhC;AAEA,OAAO,MAAMC,wBAAwB,GAAG,OAAO;AAACC,EAAAA,IAAI,EAAEH;AAAP,CAAP,CAAjC;AACP,OAAO,MAAMI,6BAA6B,GAAIC,IAAD,IAAU;AACrD,SAAO;AACLF,IAAAA,IAAI,EAAEF,uBADD;AAELK,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID,CALM;AAOP,IAAIE,YAAY,GAAG,EAAnB;;AAIA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAwBG,MAAxB,KAAmC;AAEtD,UAAQA,MAAM,CAACP,IAAf;AAEI,SAAKH,YAAL;AAEI,UAAIS,KAAK,CAACE,cAAN,KAAyB,EAA7B,EAAiC;AAC7B,YAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,YAAIC,UAAU,GAAG;AACbC,UAAAA,EAAE,EAAEN,KAAK,CAACO,OAAN,CAAcC,MAAd,GAAuB,CADd;AAEbL,UAAAA,IAAI,EAAEA,IAAI,CAACM,QAAL,KAAkB,GAAlB,GAAwBN,IAAI,CAACO,UAAL,EAFjB;AAGbd,UAAAA,IAAI,EAAEI,KAAK,CAACE;AAHC,SAAjB;AAKAF,QAAAA,KAAK,CAACO,OAAN,CAAcI,IAAd,CAAmBN,UAAnB;AACH;;AACDL,MAAAA,KAAK,CAACE,cAAN,GAAuB,EAAvB;AAEA,aAAOF,KAAP;;AAEJ,SAAKR,uBAAL;AACIQ,MAAAA,KAAK,CAACE,cAAN,GAAuBD,MAAM,CAACJ,OAA9B;AAEJ,aAAOG,KAAP;;AAEA;AACI,aAAOA,KAAP;AAvBR;AA0BH,CA5BD;;AA8BA,eAAeD,cAAf","sourcesContent":["const SEND_MESSAGE = 'SEND_MESSAGE';\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE_NEW_MESSAGE_TEXT';\n\nexport const sendMessageActionCreator = () => ({type: SEND_MESSAGE})\nexport const updateNewMessageActionCreator = (text) => {\n  return {\n    type: UPDATE_NEW_MESSAGE_TEXT,\n    payload: text,\n  }\n}\n\nlet initialState = {\n\n}\n\nconst dialogsReduser = (state = initialState , action) => {\n\n    switch (action.type) {\n        \n        case SEND_MESSAGE:\n\n            if (state.newMessageText !== '') {\n                let date = new Date();\n                let newMessage = {\n                    id: state.message.length + 1,\n                    date: date.getHours() + ':' + date.getMinutes(),\n                    text: state.newMessageText,\n                }\n                state.message.push(newMessage)\n            }\n            state.newMessageText = ''\n\n            return state\n\n        case UPDATE_NEW_MESSAGE_TEXT:\n            state.newMessageText = action.payload\n        \n        return state\n\n        default:\n            return state\n    }\n\n}\n\nexport default dialogsReduser;"]},"metadata":{},"sourceType":"module"}