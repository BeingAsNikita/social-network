{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nexport const followAC = id => ({\n  type: FOLLOW,\n  payload: id\n});\nexport const unfollowAC = id => ({\n  type: FOLLOW,\n  payload: id\n});\nexport const setUsersAC = users => ({\n  type: SET_USERS,\n  payload: users\n});\nlet initialState = {\n  users: [{\n    id: 1,\n    followed: true,\n    fullName: 'Nikita',\n    status: 'Каеф',\n    location: {\n      city: 'SPB',\n      country: 'Russia'\n    }\n  }, {\n    id: 2,\n    followed: false,\n    fullName: 'Yura',\n    status: 'Осенняя мразь',\n    location: {\n      city: 'NY',\n      country: 'USA'\n    }\n  }]\n};\nexport const usersReduser = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      let stateCopy = { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.payload) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n      return stateCopy;\n\n    case UNFOLLOW:\n      {\n        let stateCopy = { ...state,\n          users: state.users.map(u => {\n            if (u.id === action.payload) {\n              return { ...u,\n                followed: false\n              };\n            }\n\n            return u;\n          })\n        };\n        return stateCopy;\n      }\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: [...state.users, ...action.payload]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\nexport default usersReduser;","map":{"version":3,"sources":["/home/nikita/Documents/it-kama/it-kama/src/redux/usersReduser.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","followAC","id","type","payload","unfollowAC","setUsersAC","users","initialState","followed","fullName","status","location","city","country","usersReduser","state","action","stateCopy","map","u"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AAGA,OAAO,MAAMC,QAAQ,GAAIC,EAAD,KAAS;AAAEC,EAAAA,IAAI,EAAEL,MAAR;AAAgBM,EAAAA,OAAO,EAAEF;AAAzB,CAAT,CAAjB;AACP,OAAO,MAAMG,UAAU,GAAIH,EAAD,KAAS;AAAEC,EAAAA,IAAI,EAAEL,MAAR;AAAgBM,EAAAA,OAAO,EAAEF;AAAzB,CAAT,CAAnB;AACP,OAAO,MAAMI,UAAU,GAAIC,KAAD,KAAY;AAAEJ,EAAAA,IAAI,EAAEH,SAAR;AAAmBI,EAAAA,OAAO,EAAEG;AAA5B,CAAZ,CAAnB;AAGP,IAAIC,YAAY,GAAG;AACfD,EAAAA,KAAK,EAAE,CACF;AACGL,IAAAA,EAAE,EAAE,CADP;AAEGO,IAAAA,QAAQ,EAAE,IAFb;AAGGC,IAAAA,QAAQ,EAAE,QAHb;AAIGC,IAAAA,MAAM,EAAE,MAJX;AAKGC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,OAAO,EAAE;AAAxB;AALb,GADE,EAQH;AACIZ,IAAAA,EAAE,EAAE,CADR;AAEIO,IAAAA,QAAQ,EAAE,KAFd;AAGIC,IAAAA,QAAQ,EAAE,MAHd;AAIIC,IAAAA,MAAM,EAAE,eAJZ;AAKIC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,IAAI,EAAE,IAAR;AAAcC,MAAAA,OAAO,EAAE;AAAvB;AALd,GARG;AADQ,CAAnB;AAmBA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAE1D,UAAQA,MAAM,CAACd,IAAf;AACI,SAAKL,MAAL;AACI,UAAIoB,SAAS,GAAG,EACZ,GAAGF,KADS;AAEZT,QAAAA,KAAK,EAAES,KAAK,CAACT,KAAN,CAAYY,GAAZ,CAAgBC,CAAC,IAAI;AACxB,cAAIA,CAAC,CAAClB,EAAF,KAASe,MAAM,CAACb,OAApB,EAA6B;AACzB,mBAAO,EAAE,GAAGgB,CAAL;AAAQX,cAAAA,QAAQ,EAAE;AAAlB,aAAP;AACH;;AACD,iBAAOW,CAAP;AACH,SALM;AAFK,OAAhB;AASA,aAAOF,SAAP;;AAEJ,SAAKnB,QAAL;AAAe;AACX,YAAImB,SAAS,GAAG,EACZ,GAAGF,KADS;AAEZT,UAAAA,KAAK,EAAES,KAAK,CAACT,KAAN,CAAYY,GAAZ,CAAgBC,CAAC,IAAI;AACxB,gBAAIA,CAAC,CAAClB,EAAF,KAASe,MAAM,CAACb,OAApB,EAA6B;AACzB,qBAAO,EAAE,GAAGgB,CAAL;AAAQX,gBAAAA,QAAQ,EAAE;AAAlB,eAAP;AACH;;AACD,mBAAOW,CAAP;AACH,WALM;AAFK,SAAhB;AASA,eAAOF,SAAP;AACH;;AACD,SAAKlB,SAAL;AAAgB;AACZ,eAAO,EAAC,GAAGgB,KAAJ;AAAWT,UAAAA,KAAK,EAAE,CAAC,GAAGS,KAAK,CAACT,KAAV,EAAiB,GAAGU,MAAM,CAACb,OAA3B;AAAlB,SAAP;AACH;;AAGD;AACI,aAAOY,KAAP;AA/BR;AAiCH,CAnCM;AAqCP,eAAeD,YAAf","sourcesContent":["const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\n\n\nexport const followAC = (id) => ({ type: FOLLOW, payload: id, })\nexport const unfollowAC = (id) => ({ type: FOLLOW, payload: id, })\nexport const setUsersAC = (users) => ({ type: SET_USERS, payload: users, })\n\n\nlet initialState = {\n    users: [\n         {\n            id: 1,\n            followed: true,\n            fullName: 'Nikita',\n            status: 'Каеф',\n            location: { city: 'SPB', country: 'Russia' }\n        },\n        {\n            id: 2,\n            followed: false,\n            fullName: 'Yura',\n            status: 'Осенняя мразь',\n            location: { city: 'NY', country: 'USA' }\n        } \n    ]\n}\n\nexport const usersReduser = (state = initialState, action) => {\n\n    switch (action.type) {\n        case FOLLOW:\n            let stateCopy = {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.payload) {\n                        return { ...u, followed: true }\n                    }\n                    return u\n                })\n            }\n            return stateCopy\n\n        case UNFOLLOW: {\n            let stateCopy = {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.payload) {\n                        return { ...u, followed: false }\n                    }\n                    return u\n                })\n            }\n            return stateCopy\n        }\n        case SET_USERS: {\n            return {...state, users: [...state.users, ...action.payload]}\n        }\n\n\n        default:\n            return state\n    }\n}\n\nexport default usersReduser;"]},"metadata":{},"sourceType":"module"}